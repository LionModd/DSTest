<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tidyverse on DataStruggle</title>
    <link>/datastruggle.life/tags/tidyverse/</link>
    <description>Recent content in Tidyverse on DataStruggle</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 29 Jun 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/datastruggle.life/tags/tidyverse/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Implementing Linear Regression</title>
      <link>/datastruggle.life/post/2018-06-28-implementing-linear-regression/</link>
      <pubDate>Fri, 29 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/datastruggle.life/post/2018-06-28-implementing-linear-regression/</guid>
      <description>Packages usedlibrary(tidyverse)library(caTools)I’ve found a dataset online to practice the method of linear regression on involving data regarding pasture rent in areas of Minnesota. The columns are
IndexRent per arable acre ($)Milk cows per square mileDifference between pasture and arable landRental price per grassy acrewith rental price per grassy acre being the dependent variable.Aim: find one variable that can be used to predict the dependent variableFirst we’ll do some preparation of the data, renaming of columns.</description>
    </item>
    
    <item>
      <title>Tibbles</title>
      <link>/datastruggle.life/post/2018-06-19-tibbles-vs-data-frames/</link>
      <pubDate>Wed, 20 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/datastruggle.life/post/2018-06-19-tibbles-vs-data-frames/</guid>
      <description>Packages usedI’ve never used tibbles that much and I don’t know why, only data frames. Data frames to me are rows of data. I’m going to see what the difference is between tibbles and data frames and hopefully add to the Rsenal. Tibbles are under the tidyverse package. Now onto the tibbles.
a &amp;lt;- tibble(x = 1:3,y = c(&amp;quot;A&amp;quot;,&amp;quot;B&amp;quot;,&amp;quot;C&amp;quot;),z = x ^ 2)a## # A tibble: 3 x 3## x y z## &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;## 1 1 A 1.</description>
    </item>
    
    <item>
      <title>Transforming data</title>
      <link>/datastruggle.life/post/2018-06-17-transforming-data/</link>
      <pubDate>Sun, 17 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/datastruggle.life/post/2018-06-17-transforming-data/</guid>
      <description>Time to tackle some basic data transformations. Without this no clever analysis can happen. Packages usedI’ll use the diamonds dataset in Rstudio to experiment with techniques. Excel’s Power Query uses steps for each transformation which seems very similar to the idea of “piping” the data in the tidyverse package. I think of adding a step in Power Query as adding another piece of the pipe in R.
kable(head(diamonds), caption = &amp;quot;Diamonds&amp;quot;) %&amp;gt;%kable_styling(bootstrap_options = &amp;quot;condensed&amp;quot;)Table 1: Diamondscaratcutcolorclaritydepthtablepricexyz0.</description>
    </item>
    
  </channel>
</rss>